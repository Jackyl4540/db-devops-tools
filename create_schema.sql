DROP USER hol_dev CASCADE;

CREATE USER hol_dev IDENTIFIED BY HandsOnLabUser1;
ALTER USER hol_dev TEMPORARY TABLESPACE temp;

GRANT CREATE SESSION, RESOURCE, UNLIMITED TABLESPACE TO hol_dev;

GRANT CREATE TABLE,
CREATE VIEW,
CREATE SEQUENCE,
CREATE PROCEDURE,
CREATE TYPE,
CREATE SYNONYM
TO hol_dev;

BEGIN
 ords_admin.enable_schema(
  p_enabled => TRUE,
  p_schema => 'hol_dev',
  p_url_mapping_type => 'BASE_PATH',
  p_url_mapping_pattern => 'hol_dev',
  p_auto_rest_auth => NULL
 );
 commit;
END;
/

DROP USER hol_prod CASCADE;

CREATE USER hol_prod IDENTIFIED BY HandsOnLabUser1;
ALTER USER hol_prod TEMPORARY TABLESPACE temp;

GRANT CREATE SESSION, RESOURCE, UNLIMITED TABLESPACE TO hol_prod;

GRANT CREATE TABLE,
CREATE VIEW,
CREATE SEQUENCE,
CREATE PROCEDURE,
CREATE TYPE,
CREATE SYNONYM
TO hol_prod;

BEGIN
 ords_admin.enable_schema(
  p_enabled => TRUE,
  p_schema => 'hol_prod',
  p_url_mapping_type => 'BASE_PATH',
  p_url_mapping_pattern => 'hol_prod',
  p_auto_rest_auth => NULL
 );
 commit;
END;
/

-- Add table lb_groups
CREATE TABLE HOL_PROD.customers (id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                 email VARCHAR2(255),
                                 name VARCHAR2(255) NOT NULL,
                                 company VARCHAR2(255) NOT NULL,
                                 CONSTRAINT customers_pk PRIMARY KEY (id),
                                 CONSTRAINT customers_email_uk UNIQUE (email));

-- Create Order_Statuses table
CREATE TABLE HOL_PROD.order_statuses (status VARCHAR2(10) NOT NULL,
                                      description VARCHAR2(255),
                                      CONSTRAINT order_statuses_pk PRIMARY KEY (status));

-- Add table lb_groups
CREATE TABLE HOL_PROD.orders (id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                              order_datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                              customer_id INTEGER NOT NULL,
                              order_status VARCHAR2(10) NOT NULL,
                              CONSTRAINT orders_pk PRIMARY KEY (id),
                              CONSTRAINT orders_customer_id_fk FOREIGN KEY (customer_id) REFERENCES HOL_PROD.CUSTOMERS(id),
                              CONSTRAINT order_status_fk FOREIGN KEY (order_status) REFERENCES HOL_PROD.order_statuses (status));

-- Load Order_Statuses data
INSERT INTO HOL_PROD.order_statuses (status, description) VALUES ('New', 'Still being created');

INSERT INTO HOL_PROD.order_statuses (status, description) VALUES ('Submitted', 'Awaiting payment');

INSERT INTO HOL_PROD.order_statuses (status, description) VALUES ('Shipped', 'Has been sent');

INSERT INTO HOL_PROD.order_statuses (status, description) VALUES ('Complete', 'Has been delivered');

-- Create Database Lock Table
CREATE TABLE HOL_PROD.DATABASECHANGELOGLOCK (ID INTEGER NOT NULL,
                                             LOCKED NUMBER(1) NOT NULL,
                                             LOCKGRANTED TIMESTAMP,
                                             LOCKEDBY VARCHAR2(255),
                                             CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID));

-- Create Database Change Log Table
CREATE TABLE HOL_PROD.DATABASECHANGELOG (ID VARCHAR2(255) NOT NULL,
                                         AUTHOR VARCHAR2(255) NOT NULL,
                                         FILENAME VARCHAR2(255) NOT NULL,
                                         DATEEXECUTED TIMESTAMP NOT NULL,
                                         ORDEREXECUTED INTEGER NOT NULL,
                                         EXECTYPE VARCHAR2(10) NOT NULL,
                                         MD5SUM VARCHAR2(35),
                                         DESCRIPTION VARCHAR2(255),
                                         COMMENTS VARCHAR2(255),
                                         TAG VARCHAR2(255),
                                         LIQUIBASE VARCHAR2(20),
                                         CONTEXTS VARCHAR2(255),
                                         LABELS VARCHAR2(255),
                                         DEPLOYMENT_ID VARCHAR2(10));

exit;
